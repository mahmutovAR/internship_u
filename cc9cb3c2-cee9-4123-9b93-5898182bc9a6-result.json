{"name": "Авторизация на странице Login Page", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAttributeError: 'NoneType' object has no attribute 'text'", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3bfb05ed54e1b139ac92eecf14719d72\")>\nusername = 'invalid username', password = 'invalid password'\nusername_desc = 'username-C'\n\n    @allure.severity(severity_level.MINOR)\n    @allure.epic(\"Smoke тест\")\n    @allure.feature(\"Скриншот упавшего теста\")\n    @allure.testcase(\"Задачи U1, U2, U4\")\n    @allure.story(\"При падении теста делается скриншот\")\n    @allure.title(\"Авторизация на странице Login Page\")\n    @allure.description(\n        \"\"\"\n        Цель: Проверить обработку упавших тестов\n    \n        Предусловие:\n            - Открыть браузер\n    \n        Шаги:\n            1. Открыть страницу с формой\n            2. Ввести данные в поле \"Username\"\n            3. Ввести данные в поле \"Password\"\n            4. Ввести данные в поле \"Username *\"\n            5. Кликнуть кнопку \"Login\"\n            6. Проверить, что отображается сообщение об успешной авторизации\n    \n        Ожидаемый результат:\n            - Авторизация прошла успешно\n            - Отображается сообщение об успешной авторизации\"\"\")\n    @pytest.mark.xfail\n    @pytest.mark.parametrize('username, password, username_desc', [('invalid username', 'invalid password', 'username-C')])\n    def test_log_in(browser: fixture, username: str, password: str, username_desc: str):\n        login_page = LoginPage(browser)\n        login_page.open_login_page()\n        login_page.fill_username(username)\n        login_page.fill_password(password)\n        login_page.fill_username_desc(username_desc)\n        login_page.click_login_button()\n>       login_page.assert_auth_success()\n\ntests/test_failure_screenshot.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:92: in assert_auth_success\n    auth_message = self.get_element_text(LoginLocators.auth_success)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.login_page.LoginPage object at 0x7fcfd8484f80>\nlocator = ('xpath', '//p[contains(string(), \"You\\'re logged in!!\")]')\n\n    def get_element_text(self, locator: tuple[str, str]) -> str:\n        \"\"\"Returns specified page element text.\"\"\"\n>       return self.get_element_by_locator(locator).text\nE       AttributeError: 'NoneType' object has no attribute 'text'\n\npages/base_page.py:39: AttributeError"}, "description": "\n    Цель: Проверить обработку упавших тестов\n\n    Предусловие:\n        - Открыть браузер\n\n    Шаги:\n        1. Открыть страницу с формой\n        2. Ввести данные в поле \"Username\"\n        3. Ввести данные в поле \"Password\"\n        4. Ввести данные в поле \"Username *\"\n        5. Кликнуть кнопку \"Login\"\n        6. Проверить, что отображается сообщение об успешной авторизации\n\n    Ожидаемый результат:\n        - Авторизация прошла успешно\n        - Отображается сообщение об успешной авторизации", "steps": [{"name": "Открыть страницу с формой", "status": "passed", "start": 1735769472581, "stop": 1735769473485}, {"name": "Ввести данные в поле \"Username\"", "status": "passed", "start": 1735769473485, "stop": 1735769474216}, {"name": "Ввести данные в поле \"Password\"", "status": "passed", "start": 1735769474216, "stop": 1735769474265}, {"name": "Ввести данные в поле \"Username *\"", "status": "passed", "start": 1735769474265, "stop": 1735769474309}, {"name": "Кликнуть кнопку \"Login\"", "status": "passed", "start": 1735769474310, "stop": 1735769474403}, {"name": "Проверить, что отображается сообщение об успешной авторизации", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'text'\n", "trace": "  File \"/home/runner/work/internship_u/internship_u/pages/login_page.py\", line 92, in assert_auth_success\n    auth_message = self.get_element_text(LoginLocators.auth_success)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/internship_u/internship_u/pages/base_page.py\", line 39, in get_element_text\n    return self.get_element_by_locator(locator).text\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1735769474403, "stop": 1735769484721}, {"name": "Скриншот упавшего теста", "status": "passed", "attachments": [{"name": "Test failure screenshot", "source": "b88a7781-a939-4007-a46b-f543b541e7fa-attachment.png", "type": "image/png"}], "start": 1735769484721, "stop": 1735769484812}], "parameters": [{"name": "username", "value": "'invalid username'"}, {"name": "password", "value": "'invalid password'"}, {"name": "username_desc", "value": "'username-C'"}], "start": 1735769472581, "stop": 1735769484721, "uuid": "d38e264a-5dce-4db0-ad5c-11390d7155b2", "historyId": "c9e2e4e4cff0d91490435764ea9c6011", "testCaseId": "ceb308f7b788505d825f055151aa5e3a", "fullName": "tests.test_failure_screenshot#test_log_in", "labels": [{"name": "story", "value": "При падении теста делается скриншот"}, {"name": "epic", "value": "Smoke тест"}, {"name": "severity", "value": "minor"}, {"name": "feature", "value": "Скриншот упавшего теста"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_failure_screenshot"}, {"name": "host", "value": "fv-az1784-583"}, {"name": "thread", "value": "2598-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_failure_screenshot"}], "links": [{"type": "tms", "url": "Задачи U1, U2, U4", "name": "Задачи U1, U2, U4"}]}